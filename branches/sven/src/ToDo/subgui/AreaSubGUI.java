/*
 * AreaSubGUI.java
 *
 * Created on 23. Juli 2007, 14:20
 */

package todo.subgui;

import todo.core.Area;
import todo.dbcon.DB_ToDo_Connect;
import java.sql.*;
import javax.swing.*;

/**
 *
 * @author  Administrator
 */
public class AreaSubGUI extends javax.swing.JFrame {
    
    private static int status;              //0=Neu; 1=Bearbeiten
    private static int areaID;      
    private static String areaName;     
    private static String areaDescription;     
    private Area area;          
    private Connection con; 
    /** Creates new form AreaSubGUI */
    public AreaSubGUI(int status, int areaID, String areaName, String areaDescription) {
        this.status = status;
        this.areaID = areaID;
        this.areaName = areaName;
        this.areaDescription = areaDescription;
        initComponents();
        if(status == 0) {
            //Neuer Bereich soll angelegt werden
            newAreaInit();
        }
        if(status == 1) {
            //Bestehender Bereich soll bearbeitet werden
            editAreaInit();
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButtonSaveAndExit = new javax.swing.JButton();
        jLabelError = new javax.swing.JLabel();
        jTextFieldAreaDescription = new javax.swing.JTextField();
        jTextFieldAreaName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Bereich erstellen/ bearbeiten");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonSaveAndExit.setText("Speichern und Schliessen");
        jButtonSaveAndExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveAndExitActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSaveAndExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, -1, -1));

        jLabelError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(jLabelError, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 230, 40));
        jPanel1.add(jTextFieldAreaDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 230, -1));
        jPanel1.add(jTextFieldAreaName, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 230, -1));

        jLabel2.setText("Bereich");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 70, -1));

        jLabel3.setText("Beschreibung");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 70, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 380, 240));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSaveAndExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveAndExitActionPerformed
        switch(status) {
            case 0:         // status=0, neue Kategorie anlegen
                newArea();
                setVisible(false);
                break;
            case 1:         // status=1, vorhandene Kategorie bearbeiten
                editArea();
                setVisible(false);
                break;
            default:
                jLabelError.setForeground(new java.awt.Color(255, 0, 0));
                jLabelError.setText("Fehler bei Ausführung des Befehls!");
        }
    }//GEN-LAST:event_jButtonSaveAndExitActionPerformed
    
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AreaSubGUI(status, areaID, areaName, areaDescription).setVisible(true);
            }
        });
    }*/
    
    public void newAreaInit() {
        jLabelError.setForeground(new java.awt.Color(255, 0, 0));
        jLabelError.setText("Es müssen alle Felder ausgewählt werden");
    }
    
    public void editAreaInit() {
        jTextFieldAreaName.setText(areaName);
        jTextFieldAreaDescription.setText(areaDescription);
    }
    
    public void newArea() {
        areaName = jTextFieldAreaName.getText();
        areaDescription = jTextFieldAreaDescription.getText();
        if(!areaName.equals("")) {
            DB_ToDo_Connect dbCon = new DB_ToDo_Connect();
            dbCon.openDB();
            con = dbCon.getCon();
            try {
                Statement stmt = con.createStatement();
                String sql = "INSERT INTO Bereich (Name, Beschreibung) VALUES " +
                        "('" + areaName + "', '" + areaDescription + "')";
                stmt.executeUpdate(sql);
                stmt.close();
            } catch(Exception e) {
                JOptionPane.showMessageDialog(null, "Abfragefehler in Prozedur: newArea(), class AreaSubGUI" +
                    e.toString() , "Fehler", JOptionPane.ERROR_MESSAGE);

            }
            dbCon.closeDB(con);
        }
        else {
            jLabelError.setText("Das Feld Bereich muss ausgefüllt werden!");
        }    
    }
    
    public void editArea() {
        areaName = jTextFieldAreaName.getText();
        areaDescription = jTextFieldAreaDescription.getText();
        if(!areaName.equals("")) {
            DB_ToDo_Connect dbCon = new DB_ToDo_Connect();
            dbCon.openDB();
            con = dbCon.getCon();
        
            try {
                Statement stmt = con.createStatement();
                String sql = "UPDATE Bereich SET Name='" + areaName 
                            + "' WHERE BereichID=" + areaID;
                stmt.executeUpdate(sql);
                String sql2 = "UPDATE Bereich SET Beschreibung='" + areaDescription 
                            + "' WHERE BereichID=" + areaID;
                stmt.executeUpdate(sql2); 
                stmt.close();
            } 
            catch(Exception e) {
                System.out.println(e.toString()); 
                System.exit(1);
            }
            dbCon.closeDB(con);
        }
        else {
            jLabelError.setText("Das Feld Bereich muss ausgefüllt werden!");
        }    
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSaveAndExit;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelError;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieldAreaDescription;
    private javax.swing.JTextField jTextFieldAreaName;
    // End of variables declaration//GEN-END:variables
    
}
