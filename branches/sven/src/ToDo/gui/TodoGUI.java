/*
 * TodoGUI.java
 *
 * Created on 10. Januar 2007, 06:02
 */
package todo.gui;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import todo.subgui.TodoSubGUI;
import todo.dialog.DeleteTodoDialog;
import todo.tablemodel.TodoTableModel;
import javax.swing.table.*;
import todo.dbcon.DB_ToDo_Connect;

/**
 *
 * @author  Marcus Hertel
 */
public class TodoGUI extends javax.swing.JFrame
{

	private int meetingID;

	/** Creates new form TodoGUI */
	public TodoGUI(int meetingID)
	{
		this.meetingID = meetingID;
		initComponents();
		jTable1.setAutoCreateRowSorter(true);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButtonNewMeeting = new javax.swing.JButton();
        jButtonEditMeeting = new javax.swing.JButton();
        jButtonDeleteMeeting = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonCopyElement = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Protokolleinträge verwalten");
        setMinimumSize(new java.awt.Dimension(540, 620));
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setMinimumSize(new java.awt.Dimension(540, 620));
        jPanel1.setPreferredSize(new java.awt.Dimension(540, 620));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonNewMeeting.setText("Neues Element");
        jButtonNewMeeting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewMeetingActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonNewMeeting, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 120, -1));

        jButtonEditMeeting.setText("Element bearbeiten");
        jButtonEditMeeting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditMeetingActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonEditMeeting, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 130, -1));

        jButtonDeleteMeeting.setText("Element löschen");
        jButtonDeleteMeeting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteMeetingActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonDeleteMeeting, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 140, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 610, 470));

        jButtonCopyElement.setText("Element kopieren");
        jButtonCopyElement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCopyElementActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonCopyElement, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, 540));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
		if (evt.WINDOW_GAINED_FOCUS != 1)
		{
			jTable1.setModel(new TodoTableModel(meetingID));
			TableColumn tc = jTable1.getColumn(jTable1.getColumnName(3));
			tc.setPreferredWidth(10);
			tc = jTable1.getColumn(jTable1.getColumnName(4));
			tc.setPreferredWidth(5);
		}
    }//GEN-LAST:event_formWindowGainedFocus

    private void jButtonDeleteMeetingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteMeetingActionPerformed
		if (jTable1.getSelectedRow() != -1)
		{
			Object cat = jTable1.getValueAt(jTable1.getSelectedRow(), 0);
			Object area = jTable1.getValueAt(jTable1.getSelectedRow(), 1);
			Object top = jTable1.getValueAt(jTable1.getSelectedRow(), 2);
			Object tdID = jTable1.getValueAt(jTable1.getSelectedRow(), -1);
			Integer temp = new Integer(String.valueOf(tdID));
			int tID = temp.intValue();
			if (cat != null)
			{
				DeleteTodoDialog delTd = new DeleteTodoDialog(this, true,
						tID, String.valueOf(cat), String.valueOf(top), String.valueOf(area));
				delTd.setVisible(true);
			}
		}
    }//GEN-LAST:event_jButtonDeleteMeetingActionPerformed

    private void jButtonEditMeetingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditMeetingActionPerformed
		if (jTable1.getSelectedRow() != -1)
		{
			Object cat = jTable1.getValueAt(jTable1.getSelectedRow(), 0);
			Object top = jTable1.getValueAt(jTable1.getSelectedRow(), 2);
			Object tdID = jTable1.getValueAt(jTable1.getSelectedRow(), -1);
			Integer temp = new Integer(String.valueOf(tdID));
			int tID = temp.intValue();
			if (cat != null)
			{
				TodoSubGUI newTodo = new TodoSubGUI(1, meetingID,
						String.valueOf(cat), String.valueOf(top), tID, true);
				newTodo.setVisible(true);
			}
		}
    }//GEN-LAST:event_jButtonEditMeetingActionPerformed

    private void jButtonNewMeetingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewMeetingActionPerformed
		String meetingType = "";
		String date = "";
		TodoSubGUI newTodo = new TodoSubGUI(0, meetingID, "", "", 0, true);
		newTodo.setVisible(true);
    }//GEN-LAST:event_jButtonNewMeetingActionPerformed

	private void jButtonCopyElementActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonCopyElementActionPerformed
	{//GEN-HEADEREND:event_jButtonCopyElementActionPerformed
		if (jTable1.getSelectedRow() != -1)
		{
			int todoID = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), -1).toString());
			int insertId = -1;
			ResultSet results = null;

			DB_ToDo_Connect.openDB();
			Connection con = DB_ToDo_Connect.getCon();

			try
			{
				con.setAutoCommit(false);

				Statement id = con.createStatement();
				ResultSet rst = id.executeQuery("SELECT MAX(ToDoID) FROM Protokollelement");
				rst.next();
				insertId = rst.getInt(1) + 1;
				id.close();

				Statement stmt = con.createStatement();
				String sql = "INSERT INTO Protokollelement (ToDoID, KategorieID, SitzungsID, StatusID, " +
						"InstitutionsID, BereichID, TBZuordnung_ID, Thema, Inhalt, Bereich, " +
						"Wiedervorlagedatum, WV_Sitzungsart, Verantwortliche, Beteiligte, updated, " +
						"Überschrift, WiedervorlageGesetzt) SELECT " + insertId + " AS ToDoID, KategorieID, " +
						"SitzungsID, 3 AS StatusID, InstitutionsID, BereichID, TBZuordnung_ID, Thema, " +
						"Inhalt, Bereich, Wiedervorlagedatum, WV_Sitzungsart, Verantwortliche, Beteiligte, " +
						"updated, Überschrift, WiedervorlageGesetzt FROM Protokollelement WHERE " +
						"ToDoID = " + todoID;
				stmt.executeUpdate(sql);
				stmt.close();

				con.commit();
				con.setAutoCommit(true);
			} catch (Exception ex)
			{
				Logger.getLogger(TodoGUI.class.getName()).log(Level.SEVERE, null, ex);
			}

			DB_ToDo_Connect.closeDB(con);

			TodoSubGUI newTodo = new TodoSubGUI(1, meetingID, null, null, todoID, false);
			newTodo.setVisible(true);
		}
	}//GEN-LAST:event_jButtonCopyElementActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCopyElement;
    private javax.swing.JButton jButtonDeleteMeeting;
    private javax.swing.JButton jButtonEditMeeting;
    private javax.swing.JButton jButtonNewMeeting;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
